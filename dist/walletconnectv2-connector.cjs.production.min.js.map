{"version":3,"file":"walletconnectv2-connector.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { ConnectorUpdate } from '@web3-react/types'\nimport { EthereumProvider } from '@walletconnect/ethereum-provider'\n\n\n\nexport class WalletConnectConnector extends AbstractConnector {\n  public provider: any;\n  constructor() {\n    super({supportedChainIds: [1284]})\n  }\n  public async activate() : Promise<ConnectorUpdate> {\n\n    this.provider = await EthereumProvider.init({\n      projectId: \"ad2993f3d628ec73d7307035cb36c4f0\",\n      chains: [1284],\n      optionalChains: [1284],\n      showQrModal: true,\n      rpcMap: {1284: \"https://rpc.api.moonbeam.network\"},\n      events: [\"chainChanged\", \"accountsChanged\"],\n      methods: [\n        \"eth_sendTransaction\",\n        \"eth_signTransaction\",\n        \"eth_sign\",\n        \"personal_sign\",\n        \"eth_signTypedData\",\n      ]\n\n    })\n    await this.provider.connect()\n    const result = await this.provider.request({ method: 'eth_requestAccounts' })\n    return {provider: this.provider,account:result[0]}\n\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n\n  public async deactivate() {\n\n  }\n}"],"names":["_AbstractConnector","WalletConnectConnector","call","supportedChainIds","_proto","prototype","activate","_activate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","EthereumProvider","init","projectId","chains","optionalChains","showQrModal","rpcMap","1284","events","methods","this","provider","sent","connect","request","method","abrupt","account","stop","apply","arguments","getProvider","_getProvider","_callee2","_context2","getChainId","_getChainId","_callee3","_context3","chainId","getAccount","_getAccount","_callee4","_context4","deactivate","_deactivate","_callee5","_context5","AbstractConnector"],"mappings":"qkOAMoCA,WAElC,SAAAC,WACED,EAAAE,UAAM,CAACC,kBAAmB,CAAC,gBAHKH,KAAAC,yEAIjC,IAAAG,EAAAH,EAAAI,UA2CA,OA3CAD,EACYE,oBAAQ,IAAAC,EAAAC,EAAAC,IAAAC,MAAd,SAAAC,IAAA,OAAAF,IAAAG,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,OAAAF,EAAAE,OAEiBC,mBAAiBC,KAAK,CAC1CC,UAAW,mCACXC,OAAQ,CAAC,MACTC,eAAgB,CAAC,MACjBC,aAAa,EACbC,OAAQ,CAACC,KAAM,oCACfC,OAAQ,CAAC,eAAgB,mBACzBC,QAAS,CACP,sBACA,sBACA,WACA,gBACA,uBAGF,OAfW,OAAbC,KAAKC,SAAQd,EAAAe,KAAAf,EAAAE,OAgBPW,KAAKC,SAASE,UAAS,OAAA,OAAAhB,EAAAE,OACRW,KAAKC,SAASG,QAAQ,CAAEC,OAAQ,wBAAwB,OAAjE,OAAAlB,EAAAmB,gBACL,CAACL,SAAUD,KAAKC,SAASM,QADpBpB,EAAAe,KACmC,KAAG,OAAA,UAAA,OAAAf,EAAAqB,UAAAvB,YAEnD,OAAA,WAAA,OAAAJ,EAAA4B,WAAAC,eAAAhC,EAEYiC,uBAAW,IAAAC,EAAA9B,EAAAC,IAAAC,MAAjB,SAAA6B,IAAA,OAAA9B,IAAAG,eAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAAA,OAAAyB,EAAAR,gBACEN,KAAKC,UAAQ,OAAA,UAAA,OAAAa,EAAAN,UAAAK,YACrB,OAAA,WAAA,OAAAD,EAAAH,WAAAC,eAAAhC,EAEYqC,sBAAU,IAAAC,EAAAlC,EAAAC,IAAAC,MAAhB,SAAAiC,IAAA,OAAAlC,IAAAG,eAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAAA,OAAA6B,EAAAZ,gBACEN,KAAKC,SAASkB,SAAO,OAAA,UAAA,OAAAD,EAAAV,UAAAS,YAC7B,OAAA,WAAA,OAAAD,EAAAP,WAAAC,eAAAhC,EAEY0C,sBAAU,IAAAC,EAAAvC,EAAAC,IAAAC,MAAhB,SAAAsC,IAAA,OAAAvC,IAAAG,eAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAAA,OAAAkC,EAAAlC,OACkBW,KAAKC,SAASG,QAAQ,CAC3CC,OAAQ,wBACR,OAFY,OAAAkB,EAAAjB,gBAAAiB,EAAArB,KAGE,IAAE,OAAA,UAAA,OAAAqB,EAAAf,UAAAc,YACnB,OAAA,WAAA,OAAAD,EAAAZ,WAAAC,eAAAhC,EAGY8C,sBAAU,IAAAC,EAAA3C,EAAAC,IAAAC,MAAhB,SAAA0C,IAAA,OAAA3C,IAAAG,eAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OAAA,UAAA,OAAAsC,EAAAnB,UAAAkB,OAEN,OAAA,WAAA,OAAAD,EAAAhB,WAAAC,eAAAnC,GA/CyCqD"}